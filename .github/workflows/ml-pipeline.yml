name: ML Pipeline

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install CPU-only PyTorch
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
        # Install other dependencies
        pip install tqdm pytest gitpython pillow numpy
        pip list  # Debug: Show installed packages
    
    - name: Create models directory
      run: mkdir -p models
        
    - name: Train model
      env:
        CUDA_VISIBLE_DEVICES: ""  # Disable CUDA
        TORCH_DEVICE: "cpu"       # Force CPU usage
      run: |
        python -V  # Debug: Show Python version
        python train_model.py
      
    - name: Run tests
      env:
        CUDA_VISIBLE_DEVICES: ""  # Disable CUDA
        TORCH_DEVICE: "cpu"       # Force CPU usage
      run: |
        ls models/  # Debug: List model files
        python test_model.py
      
    - name: Archive model artifacts
      if: success()  # Only run if previous steps succeeded
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: models/
        retention-days: 90
        if-no-files-found: error  # Fail if no models are found

    - name: Debug on failure
      if: failure()
      run: |
        echo "Debug information:"
        pwd
        ls -la
        ls -la models/ || echo "models/ directory not found"
        python -c "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'CUDA available: {torch.cuda.is_available()}')"